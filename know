cd Django/
  ls
    sudo apt-get install python3
    touch .gitignore
    git add .
    git commit -m"django"
    git init
    git add .
    git commit -m"django"
    git remote add origin https://github.com/arunvijay10/django.git
    git push -u origin master
    sudo apt-get install python3.6
  199  python --version
  200  sudo apt-get install python3.6
  201  python3 -V
  202  sudo apt install python3-django
  203  django-admin --version
  204  sudo apt install python3-pip
  205  sudo apt install python3-venv
  206  python3.6 -m venv my_env
  207  sudo apt install python3-pip
  208  sudo pip3 install --upgrade pip
  209  pip3 install django
  210  django -version
  211  django --version
  212  django-admin --version
  213  pip3 uninstall django-admin
  214  pip3 uninstall django
  215  sudo pip3 uninstall django
  216  sudo pip3 install django3.0.1
  217  sudo pip3 install django=3.0.1
  218  sudo pip3 install django==3.0.1
-------------------------------------------------------------------------------------


sudo apt-get install python3-pip
pip3 install django
sudo pip3 install django --upgrade
sudo django-admin startproject coding .
python3 manage.py runserver
sudo django-admin  startapp products


in products make file name as-----
                                  |
                                  |
                                  |
                                  -----urls.py
-------------------------------------------------------------------
In  project url we have to add
*Include And Path
from django.contrib import admin
from django.urls import path,include

urlpatterns = [
    path('admin/', admin.site.urls),
    path("",include('products.urls')),
]

------------------------------------------------------------------
In app we have import 

*View

add same url of project


from django.contrib import admin
from django.urls import path
from . import views

urlpatterns = [
    path("",views.index,name="home")
    
]
index is a function that is created inside a view file
------------------------------------------------------------------
Then we will be working on models


class Person(models.Model):
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=30)


-----------------------------------------------------------------
in settings go to installed apps and add products

in apps.py go to products.config(copy-->ProductsConfig)

and in setting installed apps
'products.apps.ProductsConfig'
-------------------------------------------------------------
python manage.py makemigrations
python manage.py migrate

---------------------------------------------------------------
Then we have to download sqllite to see database
--------------------------------------------------------------
python3 manage.py createsuperuser
-------------------------------------------------------------
go to admin.py
you have to import from models.py
you have to write the class name
import .models products(products is a class name)

from .models import product
#admin.site.register(product)

class productadmin(admin.ModelAdmin):
    list_display=('name','price','image')
admin.site.register(product,productadmin)
-----------------------------------------------------------------

changes in view.py
from django.shortcuts import render
from django.http import HttpResponse
from .models import product (Importing model)
------------------------------------------------------------------


in product folder we will be creating a folder name as 
templates

inside we have to create a html file


inside views.py we will make a changes

def index(request):
    # return HttpResponse("Hello");
    return render(request,'index.html')



---------------------------------------------------------------
new 
create a static file and templates outside the all folder


go to setting and move downwords to static files
and open the link give and copy:

inside static dile i have created a new.txt

STATICFILES_DIRS = [
    BASE_DIR / "static",
    '/var/www/static/',
]


after includuing the file go to http://127.0.0.1:8000/static/new.txt



changing admin pannel
admin.site.site_header = 'xyz admin'
admin.site.site_title = 'xyz admin'
admin.site.site_url = 'http:/xyz.com/'
admin.site.index_title = 'xyz administration'
admin.empty_value_display = '**Empty**'

mysql database engine

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'makeadd',       - - - - - | (same name as created in a database) 
        'USER': 'dbadmin',                 |
        'PASSWORD': '12345',               | 
        'HOST': 'localhost',               |
        'PORT': '3306',                    |    
    }                                      |
}                                          | 
                                           | 
create a database in phpmyadmin makeadd----

#create model then
class user(models.Model):
   username = models.CharField(max_length=60)
   phone = models.IntegerField()
   email = models.CharField(max_length=15)
   pass1= models.CharField(max_length=60)
   pass2 =  models.CharField(max_length=60)





in views.py
if request.method=="POST":
		username= request.POST.get('username')
		email= request.POST.get('email')
		phone= request.POST.get('phone')
		pass1= request.POST.get('pass1')
		pass2= request.POST.get('pass2')





from django.db import models

# Create your models here.
class user(models.Model):
   username = models.CharField(max_length=60)
   #pin = models.CharField(max_length=60)
   phone = models.IntegerField()
   email = models.CharField(max_length=15)
   pass1= models.CharField(max_length=60)
   pass2 =  models.CharField(max_length=60)



from django.shortcuts import render
from .models import user
def home(request):
	if request.method=="POST":
		username=request.POST.get('username')
		#pin=request.method.get(pin)
		phone=request.POST.get('phone')
		#job=request.method.get(job)
		email=request.POST.get('email')
		pass1=request.POST.get('pass1')
		pass2=request.POST.get('pass2')
		if pass1==pass2:
			user(username=username,phone=phone,email=email,pass1=pass1,pass2=pass2).save()
		
	return render(request,"home.html")
